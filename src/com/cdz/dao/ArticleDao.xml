<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 文章表[article]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-04-21 20:54:18 -->
<mapper namespace="dao.ArticleDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="po.ArticlePO">
		INSERT INTO article (
		<if test="title != null and title != ''">
	         title, <!-- 标题 -->
		</if>
		<if test="type_ != null and type_ != ''">
	         type_, <!-- 类型 -->
		</if>
		<if test="content != null and content != ''">
	         content, <!-- 内容 -->
		</if>
		<if test="status_ != null and status_ != ''">
	         status_, <!-- 状态，0：新建，1：发布 -->
		</if>
		<if test="publish_date != null and publish_date != ''">
	         publish_date, <!-- 发布时间 -->
		</if>
		<if test="is_del != null and is_del != ''">
	         is_del, <!-- 是否删除，0：未删除，1：删除 -->
		</if>
		<if test="create_date != null and create_date != ''">
	         create_date, <!-- 创建时间 -->
		</if>
		<if test="oper_id != null and oper_id != ''">
	         oper_id, <!-- 操作人ID -->
		</if>
		<if test="article_id != null and article_id != ''">
	          article_id  <!-- 主键 -->
	   </if>
		)VALUES(
		<if test="title != null and title != ''">
	          #{title, jdbcType=VARCHAR}, <!-- 标题 -->
	    </if>
		<if test="type_ != null and type_ != ''">
	          #{type_, jdbcType=VARCHAR}, <!-- 类型 -->
	    </if>
		<if test="content != null and content != ''">
	          #{content, jdbcType=VARCHAR}, <!-- 内容 -->
	    </if>
		<if test="status_ != null and status_ != ''">
	          #{status_, jdbcType=VARCHAR}, <!-- 状态，0：新建，1：发布 -->
	    </if>
		<if test="publish_date != null and publish_date != ''">
	          #{publish_date, jdbcType=VARCHAR}, <!-- 发布时间 -->
	    </if>
		<if test="is_del != null and is_del != ''">
	          #{is_del, jdbcType=VARCHAR}, <!-- 是否删除，0：未删除，1：删除 -->
	    </if>
		<if test="create_date != null and create_date != ''">
	          #{create_date, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
		<if test="oper_id != null and oper_id != ''">
	          #{oper_id, jdbcType=VARCHAR}, <!-- 操作人ID -->
	    </if>
		<if test="article_id != null and article_id != ''">
		     #{article_id, jdbcType=VARCHAR}  <!-- 主键 -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="po.ArticlePO">
		INSERT INTO article (
		    <include refid="column" />
		)
		VALUES (
		    #{article_id, jdbcType=VARCHAR},  <!-- 主键 -->
		    #{title, jdbcType=VARCHAR},  <!-- 标题 -->
		    #{type_, jdbcType=VARCHAR},  <!-- 类型 -->
		    #{content, jdbcType=VARCHAR},  <!-- 内容 -->
		    #{status_, jdbcType=VARCHAR},  <!-- 状态，0：新建，1：发布 -->
		    #{publish_date, jdbcType=VARCHAR},  <!-- 发布时间 -->
		    #{is_del, jdbcType=VARCHAR},  <!-- 是否删除，0：未删除，1：删除 -->
		    #{create_date, jdbcType=VARCHAR},  <!-- 创建时间 -->
		    #{oper_id, jdbcType=VARCHAR}  <!-- 操作人ID -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="po.ArticlePO">
		UPDATE article
		<set>
			<if test="article_id != null">
		          article_id = #{article_id, jdbcType=VARCHAR},  <!-- 主键 -->
			</if>
			<if test="title != null">
		          title = #{title, jdbcType=VARCHAR},  <!-- 标题 -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=VARCHAR},  <!-- 类型 -->
			</if>
			<if test="content != null">
		          content = #{content, jdbcType=VARCHAR},  <!-- 内容 -->
			</if>
			<if test="status_ != null">
		          status_ = #{status_, jdbcType=VARCHAR},  <!-- 状态，0：新建，1：发布 -->
			</if>
			<if test="publish_date != null">
		          publish_date = #{publish_date, jdbcType=VARCHAR},  <!-- 发布时间 -->
			</if>
			<if test="is_del != null">
		          is_del = #{is_del, jdbcType=VARCHAR},  <!-- 是否删除，0：未删除，1：删除 -->
			</if>
			<if test="create_date != null">
		          create_date = #{create_date, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
			<if test="oper_id != null">
		          oper_id = #{oper_id, jdbcType=VARCHAR},  <!-- 操作人ID -->
			</if>
		</set>
		WHERE  article_id = #{article_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM article WHERE  article_id = #{article_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="po.ArticlePO">
		SELECT
		<include refid="column" />
		FROM article WHERE  article_id = #{article_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="po.ArticlePO">
		SELECT
		    <include refid="column" />
		FROM article
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="po.ArticlePO">
		SELECT
			<include refid="column" />	
		FROM article
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="po.ArticlePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM article
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="po.ArticlePO">
		SELECT
			<include refid="column" />	
		FROM article
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="po.ArticlePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM article
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM article
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM article
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  article_id,  <!-- 主键 -->
		  title,  <!-- 标题 -->
		  type_,  <!-- 类型 -->
		  content,  <!-- 内容 -->
		  status_,  <!-- 状态，0：新建，1：发布 -->
		  publish_date,  <!-- 发布时间 -->
		  is_del,  <!-- 是否删除，0：未删除，1：删除 -->
		  create_date,  <!-- 创建时间 -->
		  oper_id  <!-- 操作人ID -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  article.article_id,  <!-- 主键 -->
		  article.title,  <!-- 标题 -->
		  article.type_,  <!-- 类型 -->
		  article.content,  <!-- 内容 -->
		  article.status_,  <!-- 状态，0：新建，1：发布 -->
		  article.publish_date,  <!-- 发布时间 -->
		  article.is_del,  <!-- 是否删除，0：未删除，1：删除 -->
		  article.create_date,  <!-- 创建时间 -->
		  article.oper_id  <!-- 操作人ID -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="article_id != null and article_id != ''">
		      AND article_id = #{article_id}  <!-- 主键 -->
		</if>
	    <if test="title != null and title != ''">
		      AND title = #{title}  <!-- 标题 -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ = #{type_}  <!-- 类型 -->
		</if>
	    <if test="content != null and content != ''">
		      AND content = #{content}  <!-- 内容 -->
		</if>
	    <if test="status_ != null and status_ != ''">
		      AND status_ = #{status_}  <!-- 状态，0：新建，1：发布 -->
		</if>
	    <if test="publish_date != null and publish_date != ''">
		      AND publish_date = #{publish_date}  <!-- 发布时间 -->
		</if>
	    <if test="is_del != null and is_del != ''">
		      AND is_del = #{is_del}  <!-- 是否删除，0：未删除，1：删除 -->
		</if>
	    <if test="create_date != null and create_date != ''">
		      AND create_date = #{create_date}  <!-- 创建时间 -->
		</if>
	    <if test="oper_id != null and oper_id != ''">
		      AND oper_id = #{oper_id}  <!-- 操作人ID -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="article_id != null and article_id != ''">
		      AND article_id like '%${article_id}%'  <!-- 主键 -->
		</if>
	    <if test="title != null and title != ''">
		      AND title like '%${title}%'  <!-- 标题 -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ like '%${type_}%'  <!-- 类型 -->
		</if>
	    <if test="content != null and content != ''">
		      AND content like '%${content}%'  <!-- 内容 -->
		</if>
	    <if test="status_ != null and status_ != ''">
		      AND status_ like '%${status_}%'  <!-- 状态，0：新建，1：发布 -->
		</if>
	    <if test="publish_date != null and publish_date != ''">
		      AND publish_date like '%${publish_date}%'  <!-- 发布时间 -->
		</if>
	    <if test="is_del != null and is_del != ''">
		      AND is_del like '%${is_del}%'  <!-- 是否删除，0：未删除，1：删除 -->
		</if>
	    <if test="create_date != null and create_date != ''">
		      AND create_date like '%${create_date}%'  <!-- 创建时间 -->
		</if>
	    <if test="oper_id != null and oper_id != ''">
		      AND oper_id like '%${oper_id}%'  <!-- 操作人ID -->
		</if>
	</sql>
	
</mapper>