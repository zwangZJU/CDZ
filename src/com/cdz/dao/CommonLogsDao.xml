<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- common_logs[common_logs]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-07-06 22:16:46 -->
<mapper namespace="dao.CommonLogsDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="po.CommonLogsPO">
		INSERT INTO common_logs (
		<if test="content != null and content != ''">
	         content, <!-- 内容 -->
		</if>
		<if test="create_date != null and create_date != ''">
	         create_date, <!-- 创建时间 -->
		</if>
		<if test="is_del != null and is_del != ''">
	         is_del, <!-- 是否删除，0：未删除，1：删除 -->
		</if>
		<if test="oper_id != null and oper_id != ''">
	         oper_id, <!-- 操作人ID -->
		</if>
		<if test="oper_name != null and oper_name != ''">
	         oper_name, <!-- 操作人名称 -->
		</if>
		<if test="log_type != null and log_type != ''">
	         log_type, <!-- 操作人名称 -->
		</if>
		<if test="log_id != null and log_id != ''">
	          log_id  <!-- 主键 -->
	   </if>
		)VALUES(
		<if test="content != null and content != ''">
	          #{content, jdbcType=VARCHAR}, <!-- 内容 -->
	    </if>
		<if test="create_date != null and create_date != ''">
	          #{create_date, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
		<if test="is_del != null and is_del != ''">
	          #{is_del, jdbcType=VARCHAR}, <!-- 是否删除，0：未删除，1：删除 -->
	    </if>
		<if test="oper_id != null and oper_id != ''">
	          #{oper_id, jdbcType=VARCHAR}, <!-- 操作人ID -->
	    </if>
		<if test="oper_name != null and oper_name != ''">
	          #{oper_name, jdbcType=VARCHAR}, <!-- 操作人名称 -->
	    </if>
	    <if test="log_type != null and log_type != ''">
	          #{log_type, jdbcType=VARCHAR}, <!-- 操作人名称 -->
	    </if>
		<if test="log_id != null and log_id != ''">
		     #{log_id, jdbcType=VARCHAR}  <!-- 主键 -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="po.CommonLogsPO">
		INSERT INTO common_logs (
		    <include refid="column" />
		)
		VALUES (
		    #{log_id, jdbcType=VARCHAR},  <!-- 主键 -->
		    #{content, jdbcType=VARCHAR},  <!-- 内容 -->
		    #{create_date, jdbcType=VARCHAR},  <!-- 创建时间 -->
		    #{is_del, jdbcType=VARCHAR},  <!-- 是否删除，0：未删除，1：删除 -->
		    #{oper_id, jdbcType=VARCHAR},  <!-- 操作人ID -->
		    #{oper_name, jdbcType=VARCHAR}  <!-- 操作人名称 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="po.CommonLogsPO">
		UPDATE common_logs
		<set>
			<if test="log_id != null">
		          log_id = #{log_id, jdbcType=VARCHAR},  <!-- 主键 -->
			</if>
			<if test="content != null">
		          content = #{content, jdbcType=VARCHAR},  <!-- 内容 -->
			</if>
			<if test="create_date != null">
		          create_date = #{create_date, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
			<if test="is_del != null">
		          is_del = #{is_del, jdbcType=VARCHAR},  <!-- 是否删除，0：未删除，1：删除 -->
			</if>
			<if test="oper_id != null">
		          oper_id = #{oper_id, jdbcType=VARCHAR},  <!-- 操作人ID -->
			</if>
			<if test="oper_name != null">
		          oper_name = #{oper_name, jdbcType=VARCHAR},  <!-- 操作人名称 -->
			</if>
		</set>
		WHERE  log_id = #{log_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM common_logs WHERE  log_id = #{log_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="po.CommonLogsPO">
		SELECT
		<include refid="column" />
		FROM common_logs WHERE  log_id = #{log_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="po.CommonLogsPO">
		SELECT
		    <include refid="column" />
		FROM common_logs
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="po.CommonLogsPO">
		SELECT
			<include refid="column" />	
		FROM common_logs
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="po.CommonLogsPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM common_logs
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="po.CommonLogsPO">
		SELECT
			<include refid="column" />	
		FROM common_logs
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="po.CommonLogsPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM common_logs
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM common_logs
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM common_logs
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  log_id,  <!-- 主键 -->
		  content,  <!-- 内容 -->
		  create_date,  <!-- 创建时间 -->
		  is_del,  <!-- 是否删除，0：未删除，1：删除 -->
		  oper_id,  <!-- 操作人ID -->
		  oper_name  <!-- 操作人名称 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  common_logs.log_id,  <!-- 主键 -->
		  common_logs.content,  <!-- 内容 -->
		  common_logs.create_date,  <!-- 创建时间 -->
		  common_logs.is_del,  <!-- 是否删除，0：未删除，1：删除 -->
		  common_logs.oper_id,  <!-- 操作人ID -->
		  common_logs.oper_name  <!-- 操作人名称 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="log_id != null and log_id != ''">
		      AND log_id = #{log_id}  <!-- 主键 -->
		</if>
	    <if test="content != null and content != ''">
		      AND content = #{content}  <!-- 内容 -->
		</if>
	    <if test="create_date != null and create_date != ''">
		      AND create_date = #{create_date}  <!-- 创建时间 -->
		</if>
	    <if test="is_del != null and is_del != ''">
		      AND is_del = #{is_del}  <!-- 是否删除，0：未删除，1：删除 -->
		</if>
	    <if test="oper_id != null and oper_id != ''">
		      AND oper_id = #{oper_id}  <!-- 操作人ID -->
		</if>
	    <if test="oper_name != null and oper_name != ''">
		      AND oper_name = #{oper_name}  <!-- 操作人名称 -->
		</if>
		<if test="log_type != null and log_type != ''">
		      AND log_type = #{log_type}  <!-- 操作人名称 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="log_id != null and log_id != ''">
		      AND log_id like '%${log_id}%'  <!-- 主键 -->
		</if>
	    <if test="content != null and content != ''">
		      AND content like '%${content}%'  <!-- 内容 -->
		</if>
	    <if test="create_date != null and create_date != ''">
		      AND create_date like '%${create_date}%'  <!-- 创建时间 -->
		</if>
	    <if test="is_del != null and is_del != ''">
		      AND is_del like '%${is_del}%'  <!-- 是否删除，0：未删除，1：删除 -->
		</if>
	    <if test="oper_id != null and oper_id != ''">
		      AND oper_id like '%${oper_id}%'  <!-- 操作人ID -->
		</if>
	    <if test="oper_name != null and oper_name != ''">
		      AND oper_name like '%${oper_name}%'  <!-- 操作人名称 -->
		</if>
		<if test="log_type != null and log_type != ''">
		      AND log_type like '%${log_type}%'  <!-- 操作人名称 -->
		</if>
	</sql>
	
</mapper>